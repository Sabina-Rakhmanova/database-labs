DROP TABLE IF EXISTS students CASCADE;
CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    student_email VARCHAR(150) UNIQUE,
    student_faculty VARCHAR(50)
);

INSERT INTO students (student_name, student_email, student_faculty)
VALUES ('student_1', 'smart1@example.com', 'PSY'),
       ('student_2', 'smart2@example.com', 'ECO'),
       ('student_3', 'smart3@example.com', 'AMI');


DROP TABLE IF EXISTS course_enrollments CASCADE;
CREATE TABLE course_enrollments (
    student_id INTEGER,
    course_id INTEGER,
    semester VARCHAR(20),
    enrollment_date DATE DEFAULT CURRENT_DATE,
    grade CHAR(2),
    PRIMARY KEY (student_id, course_id, semester),
    FOREIGN KEY (student_id) REFERENCES students(student_id)
);

INSERT INTO course_enrollments (student_id, course_id, semester, grade) 
VALUES (1, 101, '2021-Spring', 'A'),
       (1, 102, '2022-Spring', 'A'),
       (2, 101, '2023-Spring', 'A+'),
       (1, 101, '2024-Fall', 'A+');


DROP TABLE IF EXISTS products CASCADE;
CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    product_price DECIMAL(15, 5)
);


DROP TABLE IF EXISTS transactions CASCADE;
CREATE TABLE transactions (
    transaction_id BIGSERIAL PRIMARY KEY,
    amount DECIMAL (20, 5),
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


DROP TABLE IF EXISTS orders CASCADE;
CREATE TABLE orders (
    order_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    order_date DATE DEFAULT CURRENT_DATE
);


DROP TABLE IF EXISTS customers CASCADE;
CREATE TABLE customers (
    customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    email VARCHAR(150)
);

INSERT INTO customers (customer_name, email)
VALUES ('Super Customer', 'super@example.com');


DROP TABLE IF EXISTS departments CASCADE;
CREATE TABLE departments (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(100)
);


SELECT * FROM students;
SELECT * FROM customers;
SELECT * FROM course_enrollments;


Output:
student_id | student_name |   student_email    | student_faculty 
------------+--------------+--------------------+-----------------
          1 | student_1    | smart1@example.com | PSY
          2 | student_2    | smart2@example.com | ECO
          3 | student_3    | smart3@example.com | AMI
(3 rows)

 customer_id | customer_name  |       email       
-------------+----------------+-------------------
           1 | Super Customer | super@example.com
(1 row)

 student_id | course_id |  semester   | enrollment_date | grade 
------------+-----------+-------------+-----------------+-------
          1 |       101 | 2021-Spring | 2025-10-05      | A 
          1 |       102 | 2022-Spring | 2025-10-05      | A 
          2 |       101 | 2023-Spring | 2025-10-05      | A+
          1 |       101 | 2024-Fall   | 2025-10-05      | A+
(4 rows)


